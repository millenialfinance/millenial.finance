{"version":3,"sources":["lib/rpc.js","contexts/Web3Context.jsx","lib/network.js","components/Header.jsx","utils/index.js","components/Modal.jsx","components/Container.jsx","components/ConnectWeb3.jsx","components/AvailableLiquidity.jsx","pages/Home.jsx","Routes.jsx","pages/Layout.jsx","theme.js","App.jsx","index.jsx","hooks/vaults.js","styles/Home.module.css"],"names":["getRpcUrl","networkId","Error","Web3Context","React","createContext","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","100","getRPCUrl","137","web3Modal","Web3Modal","cacheProvider","Web3Provider","children","useState","web3State","setWeb3State","providerChainId","ethersProvider","web3Provider","account","setAccount","balance","setBalance","loading","setLoading","setWeb3Provider","useCallback","prov","a","updateAccount","Web3","provider","ethers","providers","currentProvider","getNetwork","providerNetwork","chainId","signer","getSigner","getAddress","gotAccount","getBalance","gotBalance","console","log","web3ModalError","connectWeb3","connect","modalProvider","on","accounts","_chainId","disconnect","clearCachedProvider","useEffect","window","ethereum","autoRefreshOnNetworkChange","cachedProvider","Provider","value","networkName","id","Number","styles","Header","props","useContext","as","align","wrap","w","mb","p","bg","direction","justify","borderBottom","borderColor","display","sm","md","width","alignItems","padding","flexGrow","bgGradient","borderRadius","m","fontWeight","bgColor","address","charsLength","prefixLength","length","slice","shortenAddress","disabled","CONNEXT_ROUTER","NETWORKS","assetId","chainName","assets","DAI","USDC","USDT","receiving_enabled","vaults_url","beefy","zappers","MilFinV1","helpers","LPvaultHelper","SSvaultHelper","vaults","name","token","router","enabled_router","enabled_routers","routers","QUICK","SUSHI","SPOOKY","isLP","PANCAKE","ASSETS","Modal","showModal","setShowModal","withdrawalAddress","setWithdrawalAddress","recipient","setRecipient","callData","setCallData","undefined","helperText","setHelperText","senderOpen","setSenderOpen","receiverOpen","setReceiverOpen","vaultSelectorOpen","setVaultSelectorOpen","assetOpen","setAssetOpen","asset","setAsset","senderChain","setSenderChain","receiverChain","setReceiverChain","showButton","setShowButton","vault","setVault","setVaults","useBeefyVaults","beefyVaults","setBeefyChainId","formattedVaults","map","v","addLiquidityUrl","includes","toLowerCase","zapper","fromTokenAddr","coder","utils","AbiCoder","vals","_callData","encode","onSubmit","values","errors","receiverAddress","noValidate","templateColumns","gap","colSpan","open","onClose","onOpen","onChange","event","target","fullWidth","findIndex","n","t","index","key","assetName","icon","size","ArrowUpDown","variant","_hover","transform","onClick","s","colStart","colEnd","defaultValue","maxW","marginTop","color","filter","label","aria-describedby","split","addr","shouldShowButton","input","match","isValidAddress","trim","required","isTruncated","container","spacing","style","justifyContent","item","isDisabled","_focus","boxShadow","routerPublicIdentifier","depositAssetId","depositChainId","withdrawAssetId","withdrawChainId","withdrawalRecipient","vaultName","withdrawCallTo","withdrawCallData","depositChainProvider","withdrawChainProvider","injectedProvider","loginProvider","Container","paddingTop","paddingBottom","margin","src","bottom","h","ConnectWeb3","minW","alt","colorScheme","px","isLoading","AvailableLiquidity","tableData","setTableData","loadingData","setLoadingData","signerAddress","getSignerAddressFromPublicIdentifier","_tableData","network","chainProvider","JsonRpcProvider","Object","entries","onchainBalance","decimals","constants","AddressZero","tokenContract","Contract","ERC20Abi","balanceOf","error","row","chain","formatUnits","push","effect","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","component","scope","parseFloat","toFixed","toString","Home","fontSize","fontFamily","href","Routes","exact","path","to","Layout","valid","className","theme","chakraTheme","global","body","bgImage","backgroundRepeat","backgroundAttachment","backgroundPosition","backgroundSize","colors","fonts","App","ReactDOM","render","document","getElementById","BEEFY_URLS","250","56","initChainId","setChainId","getVaults","endPoint","axios","get","response","data","substring","indexOf","allVaults","eval","selectedVaults","depositsPaused","status","tokenAddress","earnContractAddress","sort","b","module","exports"],"mappings":"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","file":"static/js/main.0950c442.chunk.js","sourcesContent":["export default function getRpcUrl(networkId) {\n  switch (networkId) {\n    case 1:\n      return 'https://mainnet.infura.io/v3/f01e9419d4de4a87ae856742ca03d64a';\n    case 56:\n      return 'https://bsc-dataseed1.ninicoin.io/';\n    case 100:\n      return 'https://xdai.poanetwork.dev/';\n    case 128:\n      return 'https://http-mainnet.hecochain.com/';\n    case 137:\n      return 'https://rpc-mainnet.matic.quiknode.pro';\n    case 250:\n      return 'https://rpcapi.fantom.network/';\n    default:\n      throw new Error('No RPC configured for network: ', networkId);\n  }\n}\n","import WalletConnectProvider from '@walletconnect/web3-provider';\nimport { ethers } from 'ethers';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Web3 from 'web3';\nimport Web3Modal from 'web3modal';\n\nimport getRPCUrl from 'lib/rpc';\n\nexport const Web3Context = React.createContext({});\n\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider,\n    options: {\n      rpc: {\n        100: getRPCUrl(100),\n        137: getRPCUrl(137),\n      },\n    },\n  },\n};\n\nconst web3Modal = new Web3Modal({\n  cacheProvider: true,\n  providerOptions,\n});\n\nexport const Web3Provider = ({ children }) => {\n  const [web3State, setWeb3State] = useState({});\n  const { providerChainId, ethersProvider, web3Provider } = web3State;\n  const [account, setAccount] = useState();\n  const [balance, setBalance] = useState();\n  const [loading, setLoading] = useState(true);\n\n  const setWeb3Provider = useCallback(async (prov, updateAccount = false) => {\n    try {\n      if (prov) {\n        const web3Provider = new Web3(prov);\n        const provider = new ethers.providers.Web3Provider(\n          web3Provider.currentProvider\n        );\n\n        const providerNetwork = await provider.getNetwork();\n\n        setWeb3State({\n          ethersProvider: provider,\n          web3Provider: prov,\n          providerChainId: providerNetwork.chainId,\n        });\n        if (updateAccount) {\n          const signer = provider.getSigner();\n          const gotAccount = await signer.getAddress();\n          const gotBalance = await signer.getBalance();\n\n          setAccount(gotAccount);\n          setBalance(gotBalance);\n        }\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log({ web3ModalError: error });\n    }\n  }, []);\n\n  const connectWeb3 = useCallback(async () => {\n    try {\n      setLoading(true);\n      const modalProvider = await web3Modal.connect();\n\n      await setWeb3Provider(modalProvider, true);\n\n      // Subscribe to accounts change\n      modalProvider.on('accountsChanged', (accounts) => {\n        setAccount(accounts[0]);\n      });\n\n      // Subscribe to chainId change\n      modalProvider.on('chainChanged', (_chainId) => {\n        setWeb3Provider(modalProvider);\n      });\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log({ web3ModalError: error });\n    }\n    setLoading(false);\n  }, [setWeb3Provider]);\n\n  const disconnect = useCallback(async () => {\n    web3Modal.clearCachedProvider();\n    setAccount();\n    setWeb3State({});\n  }, []);\n\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.autoRefreshOnNetworkChange = false;\n    }\n    if (web3Modal.cachedProvider) {\n      connectWeb3();\n    } else {\n      setLoading(false);\n    }\n  }, [connectWeb3]);\n\n  return (\n    <Web3Context.Provider\n      value={{\n        ethersProvider,\n        web3Provider,\n        connectWeb3,\n        loading,\n        disconnect,\n        providerChainId,\n        account,\n        balance,\n      }}\n    >\n      {children}\n    </Web3Context.Provider>\n  );\n};\n","export default function networkName(id) {\n  switch (Number(id)) {\n    case 1:\n      return 'Ethereum Mainnet';\n    case 56:\n      return 'Binance Smart Chain';\n    case 100:\n      return 'xDai Network';\n    case 137:\n      return 'Matic Network';\n    case 250:\n      return 'Fantom Opera';\n    default:\n      return 'Unsupported Network';\n  }\n}\n","import React, { useContext } from 'react';\nimport { Box, Flex, Button, Image } from '@chakra-ui/react';\nimport { Web3Context } from 'contexts/Web3Context';\nimport networkName from 'lib/network';\nimport { shortenAddress } from 'utils/index';\n\nconst styles = {\n  gradient: 'linear-gradient(257.5deg, #EB0055 -39.73%, #FFFA80 107.97%)',\n};\n\nconst Header = (props) => {\n  const { account, providerChainId } = useContext(Web3Context);\n\n  return (\n    <Flex\n      as=\"nav\"\n      align=\"center\"\n      wrap=\"wrap\"\n      w=\"100%\"\n      mb={'1rem'}\n      p={'1rem'}\n      bg=\"transparent\"\n      direction={['column', 'row', 'row', 'row']}\n      justify={['center', 'space-between', 'flex-end', 'flex-end']}\n      borderBottom=\"1px\"\n      borderColor=\"gray.500\"\n    >\n      <Box\n        display={{ sm: 'none', md: 'flex' }}\n        width={{ sm: 'full', md: 'auto' }}\n        alignItems=\"center\"\n        padding=\"0.5rem\"\n        flexGrow={1}\n      />\n      <Box\n        bgGradient={styles.gradient}\n        borderRadius=\"1rem\"\n        direction=\"column\"\n        align=\"center\"\n        p=\"0.5rem\"\n        m=\"0.5rem\"\n        fontWeight=\"light\"\n      >\n        {networkName(providerChainId)}\n      </Box>\n      <Box>\n        {account ? (\n          <Button\n            bgColor=\"white\"\n            borderRadius=\"1rem\"\n            direction=\"column\"\n            align=\"center\"\n            p=\"0.5rem\"\n            m=\"0.5rem\"\n            fontWeight=\"light\"\n          >\n            {shortenAddress(account)}\n          </Button>\n        ) : (\n          <Button\n            bgColor=\"white\"\n            borderRadius=\"1rem\"\n            direction=\"column\"\n            align=\"center\"\n            p=\"0.5rem\"\n            m=\"0.5rem\"\n            fontWeight=\"light\"\n            disabled\n          >\n            No account found.\n          </Button>\n        )}\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Header;\n","/**\n * Shorten an Ethereum address. `charsLength` allows to change the number of\n * characters on both sides of the ellipsis.\n *\n * Examples:\n *   shortenAddress('0x19731977931271')    // 0x1973…1271\n *   shortenAddress('0x19731977931271', 2) // 0x19…71\n *   shortenAddress('0x197319')            // 0x197319 (already short enough)\n *\n * @param {string} address The address to shorten\n * @param {number} [charsLength=4] The number of characters to change on both sides of the ellipsis\n * @returns {string} The shortened address\n */\nexport function shortenAddress(address, charsLength = 4) {\n  const prefixLength = 2; // \"0x\"\n\n  if (!address) {\n    return '';\n  }\n  if (address.length < charsLength * 2 + prefixLength) {\n    return address;\n  }\n  return (\n    address.slice(0, charsLength + prefixLength) +\n    '…' +\n    address.slice(-charsLength)\n  );\n}\n","/* eslint-disable no-console */\nimport React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\n\nimport { utils } from 'ethers';\nimport { Web3Context } from 'contexts/Web3Context';\nimport { ConnextModal } from 'millenial-modal';\nimport { ArrowUpDownIcon } from '@chakra-ui/icons';\nimport {\n  Button,\n  Grid,\n  Select,\n  GridItem,\n  Input,\n  Text,\n  IconButton,\n  Center,\n  Circle,\n} from '@chakra-ui/react';\nimport getRpcUrl from 'lib/rpc';\nimport { useBeefyVaults } from 'hooks/vaults';\n\nexport const CONNEXT_ROUTER =\n  'vector52rjrwRFUkaJai2J4TrngZ6doTUXGZhizHmrZ6J15xVv4YFgFC';\n\n\nexport const NETWORKS = [\n  {\n    assetId: '0x0000000000000000000000000000000000000000',\n    chainName: 'xDai Chain',\n    chainId: 100,\n    assets: {\n      DAI: '0x0000000000000000000000000000000000000000',\n      USDC: '0xDDAfbb505ad214D7b80b1f830fcCc89B60fb7A83',\n      USDT: '0x4ECaBa5870353805a9F068101A40E0f32ed605C6',\n    },\n  },\n  {\n    assetId: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n    chainName: 'Matic Mainnet',\n    chainId: 137,\n    receiving_enabled: true,\n    vaults_url: {\n      beefy: 'https://raw.githubusercontent.com/beefyfinance/beefy-app/prod/src/features/configure/vault/polygon_pools.js'\n    },\n    zappers: {\n      MilFinV1: '0x02700945F8030717e8F7ac9c4c88fc1cc2FcFb36',\n    },\n    helpers: {\n      LPvaultHelper: '0x145DEC81a19D00deBaFB5bd68b83d95478C1e4A2',\n      SSvaultHelper: '0xEe7AaA16629343073F66A5438Ec9451337688C70',\n    },\n    vaults: [\n      {\n        name: 'Beefy Finance mOCEAN/MATIC Q-LP Vault',\n        token: '0x5a94F81D25c73eDdBDD84b84E8F6D36C58270510',\n        address: '0x82303a4b2c821204A84AB2a068eC8EDf3Bc23061',\n        provider: 'BEEFY',\n        router: '0xa5E0829CaCEd8fFDD4De3c43696c57F7D7A678ff',\n      },\n      {\n        name: 'Beefy Finance wETH/wBTC Q-LP Vault',\n        address: '0xf26607237355D7c6183ea66EC908729E9c6eEB6b',\n        token: '0xdC9232E2Df177d7a12FdFf6EcBAb114E2231198D',\n        provider: 'BEEFY',\n        router: '0xa5E0829CaCEd8fFDD4De3c43696c57F7D7A678ff',\n      },\n    ],\n    enabled_router: 'SUSHI',\n    enabled_routers: ['SUSHI', 'QUICK'],\n    routers: {\n      QUICK: '0xa5E0829CaCEd8fFDD4De3c43696c57F7D7A678ff',\n      SUSHI: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n    },\n    assets: {\n      DAI: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n      USDC: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n      USDT: '0xc2132D05D31c914a87C6611C10748AEb04B58e8F',\n    },\n  },\n  {\n    assetId: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n    chainName: 'Fantom Mainnet',\n    chainId: 250,\n    receiving_enabled: true,\n    vaults_url: {\n      beefy: 'https://raw.githubusercontent.com/beefyfinance/beefy-app/prod/src/features/configure/vault/fantom_pools.js'\n    },\n    enabled_router: 'SPOOKY',\n    enabled_routers: ['SPOOKY'],\n    routers: {\n      SPOOKY: '0xf491e7b69e4244ad4002bc14e878a34207e38c29'\n    },\n    assets: {\n      DAI: '0x8d11ec38a3eb5e956b052f67da8bdc9bef8abf3e',\n      USDC: '0x04068da6c83afcfa0e13ba15a6696662335d5b75',\n      USDT: '0x049d68029688eabf473097a2fc38ef61633a3c7a',\n    },\n    zappers: {\n      MilFinV1: '0x37d25ae82af02a8b8c5390bf322b8f0879576e4f',\n    },\n    helpers: {\n      LPvaultHelper: '0x86Cd8de452692EAef65CBBc52EAF57Ef215F73af',\n      SSvaultHelper: '0x332f83fBC33ddB9FaD17Df7Cbb7abF8f8E48232d',\n    },\n    vaults: [\n      {\n        name: 'LINK/FTM Beefy Finance Vault',\n        address: '0x711969A90C9EDD815A5C2b441FC80d067EC5E969',\n        router: 'SPOOKY',\n        isLP: true,\n        token: '0x89d9bc2f2d091cfbfc31e333d6dc555ddbc2fd29',\n        provider: 'BEEFY',\n      },\n      {\n        name: 'CRV/FTM Beefy Finance Vault',\n        address: '0xdf68Bf80D427A5827Ff2c06A9c70D407e17DC041',\n        router: 'SPOOKY',\n        isLP: true,\n        token: '0xb471ac6ef617e952b84c6a9ff5de65a9da96c93b',\n        provider: 'BEEFY',\n      },\n      {\n        name: 'AAVE/FTM Beefy Finance Vault',\n        token: '0xebf374bb21d83cf010cc7363918776adf6ff2bf6',\n        router: 'SPOOKY',\n        isLP: true,\n        address: '0xDa4bb93Bac7CC00F6c6e2193d115Cf45099b31a0',\n        provider: 'BEEFY',\n      }\n    ]\n  },\n  {\n    assetId: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n    chainName: 'Binance Smart Chain Mainnet',\n    chainId: 56,\n    receiving_enabled: false,\n    vaults: [],\n    zappers: {\n      MilFinV1: '0x04fD9C93b382158b7ebe9ABc0D560846eFC31637',\n    },\n    routers: {\n      PANCAKE: '0x10ED43C718714eb63d5aA57B78B54704E256024E',\n    },\n    enabled_router: 'PANCAKE',\n    enabled_routers: ['PANCAKE'],\n    helpers: {\n      LPvaultHelper: '0x60Ae6c80f0bbd645c21197c115862d3f42f8cbff',\n      SSvaultHelper: '0x6d5253048f57De842020A4E0D7667d287264360d',\n    },\n    vaults_url: {\n      beefy: 'https://raw.githubusercontent.com/beefyfinance/beefy-app/prod/src/features/configure/vault/bsc_pools.js',\n    },\n    assets: {\n      DAI: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      USDC: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      USDT: '0x55d398326f99059fF775485246999027B3197955',\n    },\n  }\n\n];\n\nexport const ASSETS = ['DAI', 'USDC', 'USDT'];\n//export const ASSETS = ['DAI', 'USDC'];\n\nconst Modal = ({ disabled }) => {\n  const { web3Provider, account } = useContext(Web3Context);\n  const [showModal, setShowModal] = useState(false);\n  const [withdrawalAddress, setWithdrawalAddress] = useState(false);\n  const [recipient, setRecipient] = useState(account);\n  const [callData, setCallData] = useState(false);\n  const [helperText, setHelperText] = useState(undefined);\n  const [senderOpen, setSenderOpen] = useState(false);\n  const [receiverOpen, setReceiverOpen] = useState(false);\n  const [vaultSelectorOpen, setVaultSelectorOpen] = useState(false);\n  const [assetOpen, setAssetOpen] = useState(false);\n  const [asset, setAsset] = useState(ASSETS[0]);\n  const [senderChain, setSenderChain] = useState(NETWORKS[0]);\n  const [receiverChain, setReceiverChain] = useState(NETWORKS[1]);\n  const [showButton, setShowButton] = useState(!disabled);\n  const [vault, setVault] = useState();\n  const [vaults, setVaults] = useState([]);\n  const [beefyVaults, setBeefyChainId] = useBeefyVaults(NETWORKS[1].chainId);\n\n  const isValidAddress = (input) => {\n    const valid = input.match(/0x[0-9a-fA-F]{40}/);\n\n    return !!valid;\n  };\n\n  useEffect(() => {\n    console.log(\"Calling setBeefyChainId with chainId: \", receiverChain.chainId);\n    setVaults([]);\n    setBeefyChainId(receiverChain.chainId);\n  }, [receiverChain, setBeefyChainId]);\n\n  useEffect(() => {\n\n    console.log(\"vaults changed, receiverChain changed\")\n\n    // this runs each time we load a new list of beefy vaults\n    // associate each vault with a router\n    // set the current vault as first in the list (the effect hook for this will set the right helper contract)\n    // use this router when crafting callData\n    //\n    if (!receiverChain.helpers) {\n      return;\n    }\n\n    if (!beefyVaults) {\n      return;\n    }\n    const formattedVaults = beefyVaults.map((v) => {\n      if (!v.addLiquidityUrl) {\n        return {\n          ...v,\n          router: receiverChain.routers[receiverChain.enabled_router],\n        };\n      } else {\n        for (let router of receiverChain.enabled_routers) {\n          if (v.addLiquidityUrl?.includes(router.toLowerCase())) {\n            return {\n              ...v,\n              router: receiverChain.routers[router],\n            };\n          }\n        }\n        return v;\n      }\n    });\n\n    console.log(\"Vaults with router: \", formattedVaults);\n    setVaults(formattedVaults);\n  }, [beefyVaults, receiverChain]);\n\n  useEffect(() => {\n    setVault(vaults[0]);\n  }, [vaults]);\n\n  useEffect(() => {\n    if (!vault) {\n      return;\n    }\n    console.log(\"Setting withdrawal address for vault: \", vault);\n    if (!!vault && receiverChain.helpers) {\n      setWithdrawalAddress(vault.isLP ? receiverChain.helpers.LPvaultHelper : receiverChain.helpers.SSvaultHelper);\n      console.log(\"Withdrawal address set!\");\n    }\n  }, [vault, receiverChain]);\n\n  useEffect(() => {\n    if (\n      receiverChain.zappers &&\n      vault &&\n      vaults &&\n      receiverChain.routers &&\n      vault?.router\n    ) {\n      const zapper = receiverChain.zappers.MilFinV1;\n      const fromTokenAddr = receiverChain.assets[asset];\n      const router = vault.router;\n      console.log(\"Zapper: \", zapper);\n      console.log(\"From token: \", fromTokenAddr);\n      console.log(\"Router: \", router);\n      console.log(\"Vault: \", vault);\n      console.log(\"Withdrawal Address:\", withdrawalAddress)\n      const coder = new utils.AbiCoder();\n      const vals = [\n        zapper,\n        fromTokenAddr,\n        vault.token,\n        router,\n        vault.address,\n        recipient,\n      ];\n\n      console.log('Vals: ', vals);\n      const _callData = coder.encode(\n        ['address', 'address', 'address', 'address', 'address', 'address'],\n        vals\n      );\n\n      console.log('Calldata: ', _callData);\n\n      setCallData(_callData);\n    }\n  }, [recipient, account, asset, receiverChain, vault, withdrawalAddress]);\n\n  const handleChange = (event) => {\n    const [addr, shouldShowButton] = event.target.value.split('-secret');\n\n    if (!isValidAddress(addr.trim())) {\n      setHelperText('Must be an Ethereum address');\n      setShowButton(false);\n      return;\n    } else {\n      setHelperText(undefined);\n    }\n\n    setShowButton(disabled ? shouldShowButton !== undefined : true);\n    setRecipient(addr.trim());\n  };\n\n  const handleSubmit = (values) => {\n    const errors = { receiverAddress: '' };\n\n    if (!values.receiverAddress) {\n      errors.receiverAddress = 'Required';\n    }\n    return errors;\n  };\n\n  const swapChains = () => {\n    const s = senderChain;\n    const r = receiverChain;\n\n    setSenderChain(r);\n    setReceiverChain(s);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} noValidate>\n        <Grid templateColumns=\"repeat(5, 1fr)\" gap={4}>\n          <GridItem colSpan={2}>\n            <Select\n              id=\"sender-chain\"\n              open={senderOpen}\n              onClose={() => setSenderOpen(false)}\n              onOpen={() => setSenderOpen(true)}\n              onChange={(event) => setSenderChain(NETWORKS[event.target.value])}\n              fullWidth\n              value={NETWORKS.findIndex(\n                (n) => n.chainId === senderChain.chainId\n              )}\n              borderColor=\"gray.300\"\n            // component={Select}\n            >\n              {NETWORKS.map((t, index) => {\n                return (\n                  <option value={index} key={index}>\n                    {t.chainName} - {t.assetName}\n                  </option>\n                );\n              })}\n            </Select>\n          </GridItem>\n          <Center>\n            <IconButton\n              icon={\n                <Circle size=\"2rem\" bg=\"gray.100\">\n                  <ArrowUpDownIcon />\n                </Circle>\n              }\n              variant=\"ghost\"\n              _hover={{ bg: 'white' }}\n              transform=\"rotate(90deg)\"\n              onClick={swapChains}\n            />\n          </Center>\n          <GridItem colStart={4} colEnd={6}>\n            <Select\n              id=\"receiver-chain\"\n              open={receiverOpen}\n              onClose={() => setReceiverOpen(false)}\n              onOpen={() => setReceiverOpen(true)}\n              onChange={(event) =>\n                setReceiverChain(NETWORKS[event.target.value])\n              }\n              fullWidth\n              value={NETWORKS.findIndex(\n                (n) => n.chainId === receiverChain.chainId\n              )}\n              borderColor=\"gray.300\"\n            // component={Select}\n            >\n              {NETWORKS.map((t, index) => {\n                return (\n                  <option value={index} key={index}>\n                    {t.chainName} - {t.assetName}\n                  </option>\n                );\n              })}\n            </Select>\n          </GridItem>\n        </Grid>\n        <Center>\n          <Select\n            id=\"asset\"\n            open={assetOpen}\n            onClose={() => setAssetOpen(false)}\n            onOpen={() => setAssetOpen(true)}\n            onChange={(event) => setAsset(ASSETS[event.target.value])}\n            fullWidth\n            defaultValue={1}\n            value={ASSETS.findIndex((a) => a === asset)}\n            borderColor=\"gray.300\"\n            maxW=\"8rem\"\n            marginTop=\"1rem\"\n          // component={Select}\n          >\n            {ASSETS.map((t, index) => {\n              return (\n                <option value={index} key={index}>\n                  {t}\n                </option>\n              );\n            })}\n          </Select>\n        </Center>\n        <Grid>\n          <GridItem>\n            <GridItem colStart={4} colEnd={6}>\n              <Text mb=\"8px\" fontWeight=\"light\" marginTop=\"1rem\" color=\"#6E7191\">\n                Destination Vault\n            </Text>\n              <Select\n                id=\"selected-vault\"\n                open={vaultSelectorOpen}\n                onClose={() => setVaultSelectorOpen(false)}\n                onOpen={() => setVaultSelectorOpen(true)}\n                onChange={(event) =>\n                  setVault(vaults[event.target.value])\n                }\n                fullWidth\n                value={vaults.findIndex(\n                  (v) => v.address === vault?.address\n                )}\n                borderColor=\"gray.300\"\n              // component={Select}\n              >\n                {vaults.filter(v => !v.name.includes(\"DAI/USDC/USDT\")).map((v, index) => {\n                  return (\n                    <option value={index} key={index}>\n                      {v.name} - {v.address}\n                    </option>\n                  );\n                })}\n              </Select>\n            </GridItem>\n          </GridItem>\n        </Grid>\n        <Grid>\n          <GridItem>\n            <Text mb=\"8px\" fontWeight=\"light\" marginTop=\"1rem\" color=\"#6E7191\">\n              Receiver Address*\n            </Text>\n            <Input\n              label=\"Receiver Address\"\n              name=\"receiverAddress\"\n              aria-describedby=\"receiverAddress\"\n              defaultValue={recipient}\n              onChange={handleChange}\n              borderColor=\"gray.300\"\n              required\n              fullWidth\n            />\n          </GridItem>\n        </Grid>\n      </form>\n\n      {helperText && (\n        <Grid>\n          <GridItem>\n            <Text id=\"helper-text\" color=\"crimson\" isTruncated>\n              {helperText}\n            </Text>\n          </GridItem>\n        </Grid>\n      )}\n\n      <Grid container spacing={2} style={{ justifyContent: 'center' }}>\n        <Grid item style={{ marginTop: 24 }}>\n          <Button\n            isDisabled={\n              !recipient ||\n              !senderChain ||\n              !receiverChain ||\n              !receiverChain.helpers ||\n              !callData ||\n              senderChain.chainId === receiverChain.chainId\n            }\n            bgGradient=\"linear-gradient(257.5deg, #EB0055 -39.73%, #FFFA80 107.97%)\"\n            _focus={{ boxShadow: 'outline' }}\n            _hover={{\n              bg: 'linear-gradient(257.5deg, #EB0055 -39.73%, #FFFA80 107.97%)',\n            }}\n            fontWeight=\"light\"\n            disabled={\n              !withdrawalAddress ||\n              !senderChain ||\n              !receiverChain ||\n              !receiverChain.helpers ||\n              !showButton ||\n              senderChain.chainId === receiverChain.chainId\n            }\n            onClick={() => {\n              console.log('senderChain: ', senderChain);\n              console.log('receiverChain: ', receiverChain);\n              console.log(\n                'getRpcUrl(senderChain.chainId): ',\n                getRpcUrl(senderChain.chainId)\n              );\n              console.log(\n                'getRpcUrl(receiverChain.chainId): ',\n                getRpcUrl(receiverChain.chainId)\n              );\n              setShowModal(true);\n            }}\n          >\n            {disabled ? 'Disabled due to Maintenance' : 'SWAP'}\n          </Button>\n        </Grid>\n      </Grid>\n\n      {web3Provider !== 'undefined' ? (\n        <ConnextModal\n          showModal={showModal}\n          routerPublicIdentifier={CONNEXT_ROUTER}\n          depositAssetId={senderChain.assets[asset]}\n          depositChainId={senderChain.chainId}\n          withdrawAssetId={receiverChain.assets[asset]}\n          withdrawChainId={receiverChain.chainId}\n          withdrawalAddress={withdrawalAddress}\n          withdrawalRecipient={recipient}\n          vaultName={vault?.name ?? 'None'}\n          withdrawCallTo={withdrawalAddress}\n          withdrawCallData={callData}\n          onClose={() => setShowModal(false)}\n          depositChainProvider={getRpcUrl(senderChain.chainId)}\n          withdrawChainProvider={getRpcUrl(receiverChain.chainId)}\n          injectedProvider={web3Provider}\n          loginProvider={window.ethereum}\n        />\n      ) : (\n        <h1>Loading...</h1>\n      )}\n    </>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport { Box, Flex, Image } from '@chakra-ui/react';\nimport { Modal, AvailableLiquidity } from 'components/index';\n\nconst DISABLED = false;\n\nconst Container = () => {\n  return (\n    <Flex align=\"center\" direction=\"column\">\n      <Box\n        width={{ sm: 'full', md: 'auto' }}\n        w={[300, 400, 560]}\n        alignItems=\"center\"\n        padding=\"1.5rem\"\n        paddingTop=\"2.5rem\"\n        paddingBottom=\"2.5rem\"\n        bgColor=\"white\"\n        boxShadow=\"0px 1rem 2rem rgba(204, 218, 238, 0.8)\"\n        borderRadius=\"1rem\"\n      >\n        <Modal disabled={DISABLED} />\n      </Box>\n      <Box\n        bgGradient=\"linear-gradient(257.5deg, rgba(235, 0, 85, 0.3) -39.73%, rgba(255, 250, 128, 0.3) 107.97%)\"\n        w={[250, 350, 500]}\n        padding=\"1rem\"\n        margin=\"2rem\"\n        borderRadius=\"lg\"\n        fontWeight=\"light\"\n        bgColor=\"white\"\n      >\n        {DISABLED\n          ? 'We are experiencing some issues with the bridge, we will be back soon.'\n          : 'This is beta software! Use at your own risk.'}\n      </Box>\n      <Box\n        width={{ sm: 'full', md: 'auto' }}\n        w={[300, 400, 560]}\n        alignItems=\"center\"\n        padding=\"1rem\"\n        margin=\"0.5rem\"\n        bgColor=\"white\"\n        boxShadow=\"0px 1rem 2rem rgba(204, 218, 238, 0.8)\"\n        borderRadius=\"1rem\"\n      >\n        <AvailableLiquidity />\n      </Box>\n      <Image\n        src=\"https://storage.googleapis.com/1hive/xpollinate/powered-by.svg\"\n        bottom=\"0\"\n        h=\"2rem\"\n        marginTop=\"calc(5% + 60px)\"\n      />\n    </Flex>\n  );\n};\n\nexport default Container;\n","import { Button, Flex, Text, Image, Center } from '@chakra-ui/react';\nimport React, { useContext } from 'react';\n\nimport { Web3Context } from 'contexts/Web3Context';\n\nconst styles = {\n  'bold-gradient':\n    'linear-gradient(257.5deg, #EB0055 -39.73%, #FFFA80 107.97%)',\n  'light-gradient':\n    'linear-gradient(257.5deg, rgba(235, 0, 85, 0.3) -39.73%, rgba(255, 250, 128, 0.3) 107.97%)',\n};\n\nconst ConnectWeb3 = () => {\n  const { connectWeb3, loading, account, disconnect } = useContext(Web3Context);\n\n  return (\n    <Center>\n      <Flex\n        bgColor=\"white\"\n        bgGradient={styles['light-gradient']}\n        boxShadow=\"0px 1rem 2rem rgba(204, 218, 238, 0.8)\"\n        borderRadius=\"1rem\"\n        direction=\"column\"\n        align=\"center\"\n        w=\"calc(100% - 2rem)\"\n        p=\"2rem\"\n        minW=\"15rem\"\n      >\n        <Image\n          src=\"https://storage.googleapis.com/1hive/xpollinate/logo.svg\"\n          alt=\"xPollinate Logo\"\n        ></Image>\n        <Text fontWeight=\"light\" m=\"1rem\">\n          Please, connect your wallet.\n        </Text>\n        {account && !loading ? (\n          <Button onClick={disconnect} colorScheme=\"orange\" px={12}>\n            Disconnect\n          </Button>\n        ) : (\n          <Button\n            onClick={connectWeb3}\n            fontWeight=\"light\"\n            _focus={{ boxShadow: 'outline' }}\n            _hover={{\n              bg: styles['bold-gradient'],\n            }}\n            bgGradient={styles['bold-gradient']}\n            maxW=\"15rem\"\n            isLoading={loading}\n          >\n            Connect\n          </Button>\n        )}\n      </Flex>\n    </Center>\n  );\n};\n\nexport default ConnectWeb3;\n","import React, { useState, useEffect } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { providers, constants, Contract, utils } from 'ethers';\nimport { getSignerAddressFromPublicIdentifier } from '@connext/vector-utils';\nimport { ERC20Abi } from '@connext/vector-types';\n\nimport getRpcUrl from '../lib/rpc';\nimport networkName from '../lib/network';\nimport { NETWORKS, CONNEXT_ROUTER } from './Modal';\n\nconst AvailableLiquidity = () => {\n  const [tableData, setTableData] = useState([]);\n  const [loadingData, setLoadingData] = useState(true);\n\n  useEffect(() => {\n    const effect = async () => {\n      const signerAddress = getSignerAddressFromPublicIdentifier(\n        CONNEXT_ROUTER\n      );\n      const _tableData = [];\n\n      for (const network of NETWORKS) {\n        // eslint-disable-next-line no-console\n        console.log('network: ', network);\n        const chainProvider = new providers.JsonRpcProvider(\n          getRpcUrl(network.chainId)\n        );\n\n        for (const [assetName, assetId] of Object.entries(network.assets)) {\n          let onchainBalance;\n          let decimals = 18;\n\n          try {\n            if (assetId === constants.AddressZero) {\n              onchainBalance = await chainProvider.getBalance(signerAddress);\n            } else {\n              const tokenContract = new Contract(\n                assetId,\n                ERC20Abi,\n                chainProvider\n              );\n\n              onchainBalance = await tokenContract.balanceOf(signerAddress);\n              decimals = await tokenContract.decimals();\n            }\n          } catch (e) {\n            // eslint-disable-next-line no-console\n            console.error(\n              `Couldn't get balance or decimals for asset ${assetName}:${assetId} on chain ${network.chainId}`,\n              e\n            );\n          }\n\n          const row = {\n            chain: networkName(network.chainId),\n            assetName,\n            balance: onchainBalance\n              ? utils.formatUnits(onchainBalance, decimals)\n              : '-',\n          };\n\n          // eslint-disable-next-line no-console\n          console.log('table row: ', row);\n          _tableData.push(row);\n        }\n      }\n\n      setTableData(_tableData);\n      setLoadingData(false);\n    };\n\n    effect();\n  }, []);\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Destination Chain</TableCell>\n            <TableCell align=\"right\">Asset</TableCell>\n            <TableCell align=\"right\">Exit Liquidity</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {loadingData ? (\n            <TableRow>{'Loading...'}</TableRow>\n          ) : (\n            tableData.map((row, index) => (\n              <TableRow key={index}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.chain}\n                </TableCell>\n                <TableCell align=\"right\">{row.assetName}</TableCell>\n                <TableCell align=\"right\">\n                  {parseFloat(row.balance).toFixed(2).toString()}\n                </TableCell>\n              </TableRow>\n            ))\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default AvailableLiquidity;\n","import React from 'react';\nimport { Text } from '@chakra-ui/react';\nimport { Container } from 'components/index';\n\nexport const Home = (props) => (\n  <div>\n    <Text\n      align=\"center\"\n      p=\"1rem\"\n      fontWeight=\"thin\"\n      fontSize=\"2xl\"\n      fontFamily=\"sans-serif\"\n    >\n      Cross-Chain Vault Zap\n    </Text>\n    <Text\n      align=\"center\"\n      p=\"1rem\"\n      fontWeight=\"thin\"\n      fontSize=\"xl\"\n      fontFamily=\"sans-serif\"\n    >\n      By <a href=\"https://milfinance.xyz\">Millennial Finance</a>\n    </Text>\n    <Text\n      align=\"center\"\n      p=\"1rem\"\n      fontWeight=\"thin\"\n      fontSize=\"l\"\n      fontFamily=\"sans-serif\"\n    >\n      This will zap your DAI into the selected vault at{' '}\n      <a href=\"https://polygon.beefy.finance/\">Beefy Finance</a>\n    </Text>\n    <Container />\n  </div>\n);\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { Home } from 'pages/Home';\n\nexport const Routes = () => (\n  <Switch>\n    <Route exact path=\"/\" component={Home} />\n    <Redirect to=\"/\" />\n  </Switch>\n);\n","import React, { useContext } from 'react';\nimport styles from 'styles/Home.module.css';\nimport { Web3Context } from 'contexts/Web3Context';\nimport { Container } from '@chakra-ui/react';\nimport { Header, ConnectWeb3 } from 'components/index';\n\nexport const Layout = ({ children }) => {\n  const { account } = useContext(Web3Context);\n  const valid = !!account;\n\n  // eslint-disable-next-line no-console\n  // console.log(valid, account, providerChainId);\n\n  return (\n    <div>\n      <Header />\n      <div className={styles.container}>\n        <Container>{valid ? children : <ConnectWeb3 />}</Container>\n      </div>\n    </div>\n  );\n};\n","import chakraTheme from '@chakra-ui/theme';\n\nexport const theme = {\n  ...chakraTheme,\n  styles: {\n    ...chakraTheme.styles,\n    global: {\n      body: {\n        bg: 'linear-gradient(118.5deg, #F2F3FB 13.9%, #F2F3FB 94.36%)',\n        bgImage:\n          // eslint-disable-next-line quotes\n          \"url('https://storage.googleapis.com/1hive/xpollinate/bg-pattern.svg')\",\n        backgroundRepeat: 'no-repeat',\n        backgroundAttachment: 'fixed',\n        backgroundPosition: 'center',\n        backgroundSize: 'cover',\n      },\n    },\n  },\n  colors: {\n    ...chakraTheme.colors,\n  },\n  fonts: {\n    ...chakraTheme.fonts,\n    body: 'Manrope, sans-serif',\n  },\n};\n","import { ChakraProvider, CSSReset } from '@chakra-ui/react';\nimport React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { Web3Provider } from 'contexts/Web3Context';\nimport { Routes } from './Routes';\nimport { Layout } from './pages/Layout';\nimport { theme } from './theme';\n\nexport const App = () => {\n  return (\n    <ChakraProvider theme={theme}>\n      <CSSReset />\n      <Web3Provider>\n        <Router>\n          <Layout>\n            <Routes />\n          </Layout>\n        </Router>\n      </Web3Provider>\n    </ChakraProvider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\n\nconst BEEFY_URLS = {\n  137: 'https://raw.githubusercontent.com/beefyfinance/beefy-app/prod/src/features/configure/vault/polygon_pools.js',\n  250: 'https://raw.githubusercontent.com/beefyfinance/beefy-app/prod/src/features/configure/vault/fantom_pools.js',\n  56: 'https://raw.githubusercontent.com/beefyfinance/beefy-app/prod/src/features/configure/vault/bsc_pools.js',\n};\n\nexport const useBeefyVaults = (initChainId) => {\n  const [vaults, setVaults] = useState([]);\n  const [chainId, setChainId] = useState(initChainId);\n\n  const getVaults = async (endPoint) => {\n    try {\n      console.log(\"Getting endpoint: \", endPoint);\n      const response = await axios.get(endPoint);\n      const data = response.data;\n      let vaults = '[' + data.substring(data.indexOf('\\n') + 1);\n      const allVaults = eval(vaults);\n      const selectedVaults = allVaults.filter(v => {\n        return !v.depositsPaused && v.status === 'active' &&\n          ((v.name?.includes('LP')) ||\n            ((v.name?.match(/\\//g) || []).length < 2 &&\n              !v.name?.includes('LP')));\n      });\n      const formattedVaults = selectedVaults\n        .map((v) => {\n          return {\n            name: `Beefy ${v.name} Vault`,\n            token: v.tokenAddress,\n            isLP: v.name?.includes('LP'),\n            provider: 'BEEFY',\n            address: v.earnContractAddress,\n          };\n        })\n        .sort((a, b) => {\n          if (a.name > b.name) {\n            return 1;\n          }\n          if (a.name < b.name) {\n            return -1;\n          }\n          return 0;\n        });\n\n      console.log(\"Got vaults: \", formattedVaults);\n\n      setVaults(formattedVaults);\n      console.log(\"Vaults were set\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    getVaults(BEEFY_URLS[chainId]);\n  }, [chainId]);\n\n  return [vaults, setChainId];\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__3JNw6\",\"header\":\"Home_header__2z2vf\",\"main\":\"Home_main__2L4cf\",\"footer\":\"Home_footer__3eZco\",\"title\":\"Home_title__2jL4m\",\"description\":\"Home_description__1txge\",\"code\":\"Home_code__2jeOn\",\"grid\":\"Home_grid__2WglI\",\"card\":\"Home_card__2ucD6\",\"logo\":\"Home_logo__3etHn\"};"],"sourceRoot":""}